import telebot
import requests
from telebot import types
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
import time
import os

BOT_TOKEN = '7412710420:AAHNCea4_fq6e83x79rPL4sW06Vla0LnHJE'
bot = telebot.TeleBot(BOT_TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ Dota 2.\n"
        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é, –Ω–∞–∂–º–∏ /help"
    )
    bot.reply_to(message, welcome_text)


@bot.message_handler(commands=['help'])
def help(message):
    help_text = (
        "üîç –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n"
        "/guide - –ü–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º –¥–ª—è –ª—é–±–æ–≥–æ –≥–µ—Ä–æ—è\n"
        "/win - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø-10 –≥–µ—Ä–æ–µ–≤ –ø–æ –≤–∏–Ω—Ä–µ–π—Ç—É\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/support - –ù–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n"
        "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É!"
    )
    bot.reply_to(message, help_text)


@bot.message_handler(commands=['support'])
def support(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.reply_to(message,
                 "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n"
                 "–Ø –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏."
                 )
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    bot.register_next_step_handler(message, process_support_message)


def process_support_message(message):
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        support_message = (
            f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n"
            f"–û—Ç: {message.from_user.first_name} ({message.from_user.id})\n"
            f"Username: @{message.from_user.username}\n\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n{message.text}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        bot.send_message("@SashaAmb", support_message)

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.reply_to(message,
                     "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É!\n"
                     "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
                     )

    except Exception as e:
        bot.reply_to(message,
                     "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.\n"
                     "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–ø—Ä—è–º—É—é @SashaAmb"
                     )


@bot.message_handler(commands=['guide'])
def hero_guide(message):
    try:
        url = 'https://api.opendota.com/api/heroStats'
        response = requests.get(url)
        heroes_data = response.json()

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–µ—Ä–æ–µ–≤
        markup = types.InlineKeyboardMarkup(row_width=3)
        buttons = []
        for hero in heroes_data:
            button = types.InlineKeyboardButton(
                text=hero['localized_name'],
                callback_data=f"hero_{hero['id']}"
            )
            buttons.append(button)

        markup.add(*buttons)
        bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–µ—Ä–æ—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–∞–π–¥–∞:", reply_markup=markup)

    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –≥–µ—Ä–æ–µ–≤: {str(e)}")


@bot.callback_query_handler(func=lambda call: call.data.startswith('hero_'))
def handle_hero_selection(call):
    try:
        hero_id = call.data.split('_')[1]
        guide_url = f"https://www.opendota.com/heroes/{hero_id}/items"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        bot.answer_callback_query(call.id)
        status_message = bot.send_message(call.message.chat.id, "–ó–∞–≥—Ä—É–∂–∞—é –≥–∞–π–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        chrome_options = Options()
        chrome_options.add_argument("--headless")  # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        chrome_options.add_argument("--window-size=1920,1080")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
        driver = webdriver.Chrome(
            service=Service(ChromeDriverManager().install()),
            options=chrome_options
        )

        # –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        driver.get(guide_url)
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        time.sleep(5)

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if not os.path.exists("screenshots"):
            os.makedirs("screenshots")

        # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        screenshot_path = f"screenshots/hero_{hero_id}.png"
        driver.save_screenshot(screenshot_path)
        driver.quit()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        with open(screenshot_path, 'rb') as photo:
            bot.send_photo(
                call.message.chat.id,
                photo,
                caption=f"–ì–∞–π–¥ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≥–µ—Ä–æ—è\n–°—Å—ã–ª–∫–∞: {guide_url}"
            )

        # –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(screenshot_path)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
        bot.delete_message(call.message.chat.id, status_message.message_id)

    except Exception as e:
        bot.send_message(
            call.message.chat.id,
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–∞–π–¥–∞: {str(e)}\n"
            f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥ –ø–æ —Å—Å—ã–ª–∫–µ: {guide_url}"
        )


@bot.message_handler(commands=['win'])
def get_top_winrate_heroes(message):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—É–±–ª–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–µ—Ä–æ–µ–≤
        url = 'https://api.opendota.com/api/heroStats'
        response = requests.get(url)
        heroes_data = response.json()

        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–µ—Ä–æ–µ–≤ —Å –∏—Ö –≤–∏–Ω—Ä–µ–π—Ç–æ–º –∏–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ç—á–µ–π
        heroes_list = []
        for hero in heroes_data:
            if hero['1_pick'] > 0:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ç—á–µ–π
                winrate = (hero['1_win'] / hero['1_pick']) * 100
                heroes_list.append({
                    'name': hero['localized_name'],
                    'winrate': winrate,
                    'matches': hero['1_pick'],
                    'wins': hero['1_win']
                })

        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–∏–Ω—Ä–µ–π—Ç—É
        sorted_heroes = sorted(heroes_list, key=lambda x: x['winrate'], reverse=True)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø-10 –≥–µ—Ä–æ—è–º–∏
        reply_message = "üèÜ –¢–æ–ø 10 –≥–µ—Ä–æ–µ–≤ –ø–æ –≤–∏–Ω—Ä–µ–π—Ç—É –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ç—á–∞—Ö:\n\n"
        for i, hero in enumerate(sorted_heroes[:10], 1):
            reply_message += (f"{i}. {hero['name']}\n"
                              f"   –í–∏–Ω—Ä–µ–π—Ç: {hero['winrate']:.2f}%\n"
                              f"   –ü–æ–±–µ–¥—ã: {hero['wins']:,}\n"
                              f"   –í—Å–µ–≥–æ –∏–≥—Ä: {hero['matches']:,}\n\n")

        reply_message += "\n–î–∞–Ω–Ω—ã–µ –≤–∑—è—Ç—ã —Å OpenDota Public Matches"
        bot.reply_to(message, reply_message)

    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")


bot.polling(none_stop=True)